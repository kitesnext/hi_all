Группировка списков
Организуйте список родственников от самого старого поколения до самого молодого.
Каждое поколение должно быть на своем собственном уровне списка. Каждый уровень должен быть в алфавитном порядке.
Первое поколение: Джеймс и Мэри
Второе поколение: Том, Моррис и Мария
Третье поколение: Тейлор, Тимоти, Александр, Джон, Джеймс и Джульетта
Четвертое поколение: Дмитрий, Денис, Делоре и Самуил
Если новое поколение добавлено, оно должно обрабатываться, как описано выше. Код должен быть
достаточно гибкая, чтобы обрабатывать N чисел поколений.
1. Используйте собственный PHP / JavaScript
2. Расположите имена
3. Создайте список имен html
4. Функциональность должна поддерживать N число поколений
Калькулятор
Напишите простой калькулятор страхования автомобилей, который выведет цену политики с использованием ванильного PHP
и JavaScript:
1. Создайте HTML-форму с полями:
<Test>
</ Test> 2/3
• Расчетная стоимость автомобиля (100 - 100 000 евро)
• Налоговый процент (0 - 100%)
• Количество платежей (количество платежей, в которых клиент хочет заплатить за
политика (1 - 12))
• Кнопка «Вычислить»
2. Создайте логику калькулятора в PHP с помощью OOP:
• Базовая цена политики составляет 11% от введенной стоимости автомобиля, за исключением пятницы 15-20
час (пользовательское время), когда оно составляет 13%
• Комиссия добавляется к базовой цене (17%)
• Налог добавляется к базовой цене (введенный пользователем)
• Рассчитывать разные платежи отдельно (если количество платежей больше 1)
• Суммы рассрочки должны соответствовать сумме суммарного вознаграждения за политику в случаях, когда сумма
не делит одинаково
• Результат округляется до двух знаков после запятой
3. Конечный результат (ценовая матрица):
• Базисная цена
• Цена с комиссией и налогом (каждый взнос отдельно)
• Сумма налога (отдельно для каждой партии)
• Грантовые суммы (сумма всех рассрочек): Цена с комиссией и налогом, общий налог
сумма.
• Пример с двумя партиями:
Хранить данные о сотрудниках
1. Создайте структуру базы данных для хранения информации о сотрудниках. Сохраненная информация
следующим образом:
• Имя
• Дата рождения
• ID-код / ??SSN
• Является ли текущий сотрудник (да / нет)
• Контактная информация (электронная почта, телефон, адрес)
Следующая информация на английском, испанском и французском языках:
• Введение
<Test>
</ Test> 3/3
• Предыдущий опыт работы
• Информация об образовании
Информация о журнале:
• Кто и когда создал запись
• Кто и когда последний раз модифицировал данные
2. Информация должна быть представлена ??как .sql-файл, который может быть импортирован в
База данных MySQL без ошибок.
3. Напишите пример запроса, чтобы получить данные из одного человека на всех языках